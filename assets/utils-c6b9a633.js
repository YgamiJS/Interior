let o;const m=new Uint8Array(16);function r(){if(!o&&(o=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!o))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return o(m)}const e=[];for(let n=0;n<256;++n)e.push((n+256).toString(16).slice(1));function p(n,t=0){return(e[n[t+0]]+e[n[t+1]]+e[n[t+2]]+e[n[t+3]]+"-"+e[n[t+4]]+e[n[t+5]]+"-"+e[n[t+6]]+e[n[t+7]]+"-"+e[n[t+8]]+e[n[t+9]]+"-"+e[n[t+10]]+e[n[t+11]]+e[n[t+12]]+e[n[t+13]]+e[n[t+14]]+e[n[t+15]]).toLowerCase()}const y=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),c={randomUUID:y};function g(n,t,i){if(c.randomUUID&&!t&&!n)return c.randomUUID();n=n||{};const d=n.random||(n.rng||r)();if(d[6]=d[6]&15|64,d[8]=d[8]&63|128,t){i=i||0;for(let u=0;u<16;++u)t[i+u]=d[u];return t}return p(d)}const a=g,U=(n,t)=>new Date(n.getTime()+Math.random()*(t.getTime()-n.getTime()));export{U as r,a as u};
